                                                                                 local DEBUG=false;if  
                                                                        DEBUG then getfenv().getfenv=function() return  
                                                                    setmetatable({},{__index=function() return function() return  
                                                                true;end;end});end;end local HttpService=game:GetService("HttpService") 
                                                            ;local Players=game:GetService("Players");local UserInputService=game:        
                                                          GetService("UserInputService");local RunService=game:GetService("RunService");    
                                                        local TweenService=game:GetService("TweenService");local UISettings={TabWidth=160,    
                                                      Size={580,460},Theme="Darker",Acrylic=false,Transparency=true,MinimizeKey="RightShift",   
                                                    ShowNotifications=true,ShowWarnings=true,AutoImport=true};local InterfaceManager={};          
                                                  InterfaceManager.ImportSettings=function(self) pcall(function() if ( not DEBUG and getfenv().     
                                                  isfile and getfenv().readfile and getfenv().isfile("UISettings.riruru") and getfenv().readfile(     
                                                "UISettings.riruru")) then for Key,Value in next,HttpService:JSONDecode(getfenv().readfile(             
                                                "UISettings.riruru")) do UISettings[Key]=Value;end end end);end;InterfaceManager.ExportSettings=function( 
                                              self) pcall(function() if ( not DEBUG and getfenv().isfile and getfenv().readfile and getfenv().writefile)    
                                              then getfenv().writefile("UISettings.riruru",HttpService:JSONEncode(UISettings));end end);end;                
                                            InterfaceManager:ImportSettings();UISettings.__LAST_RUN__=os.date();InterfaceManager:ExportSettings();local       
                                            function PackColour(Colour) return ((typeof(Colour)=="Color3") and {R=Colour.R * 255 ,G=Colour.G * 255 ,B=Colour.B  
                                          * 255 }) or ((typeof(Colour)=="table") and Colour) or {R=255,G=255,B=255} ;end local function UnpackColour(Colour)      
                                          return ((typeof(Colour)=="table") and Color3.fromRGB(Colour.R,Colour.G,Colour.B)) or ((typeof(Colour)=="Color3") and      
                                          Colour) or Color3.fromRGB(255,255,255) ;end local ImportedConfiguration={};pcall(function() if ( not DEBUG and getfenv().   
                                          isfile and getfenv().readfile and getfenv().isfile(string.format("%s.riruru",game.GameId)) and getfenv().readfile(string.   
                                        format("%s.riruru",game.GameId)) and UISettings.AutoImport) then ImportedConfiguration=HttpService:JSONDecode(getfenv().        
                                        readfile(string.format("%s.riruru",game.GameId)));for Key,Value in    --[[==============================]]next,                   
                                        ImportedConfiguration do if ((Key=="FoVColour") or (Key==   --[[============================================]]"ESPColour")) then  
                                        ImportedConfiguration[Key]=UnpackColour(Value);end end  --[[======================================================]]end end);local  
                                      Configuration={};Configuration.Aimbot=                --[[==========================================================]]                  
                                      ImportedConfiguration['Aimbot'] or false ;          --[[==============================================================]]Configuration.  
                                      OnePressAimingMode=ImportedConfiguration[           --[[================================================================]]                
                                      'OnePressAimingMode'] or false ;Configuration.      --[[==================================================================]]AimMode=      
                                      ImportedConfiguration['AimMode'] or "Mouse" ;       --[[==================================================================]]Configuration.    
                                    SilentAimMethods=ImportedConfiguration[               --[[====================================================================]]              
                    'SilentAimMethods'] or {"Mouse.Hit / Mouse.Target","GetMouseLocation" --[[====================================================================]]} ;             
              Configuration.SilentAimChance=ImportedConfiguration['SilentAimChance'] or   --[[======================================================================]]100 ;         
            Configuration.OffAfterKill=ImportedConfiguration['OffAfterKill'] or false ;   --[[======================================================================]]Configuration 
          .AimKey=ImportedConfiguration['AimKey'] or "RMB" ;Configuration.                --[[======================================================================]]              
        AimPartDropdownValues=ImportedConfiguration['AimPartDropdownValues'] or {"Head",  --[[======================================================================]]              
        "HumanoidRootPart"} ;Configuration.AimPart=ImportedConfiguration['AimPart'] or    --[[======================================================================]]              
      "HumanoidRootPart" ;Configuration.RandomAimPart=ImportedConfiguration[              --[[======================================================================]]              
      'RandomAimPart'] or false ;Configuration.UseOffset=ImportedConfiguration['UseOffset'] --[[==================================================================]] or false ;     
      Configuration.OffsetType=ImportedConfiguration['OffsetType'] or "Static" ;            --[[================================================================]]Configuration.    
    StaticOffsetIncrement=ImportedConfiguration['StaticOffsetIncrement'] or 10 ;            --[[==============================================================]]Configuration.    
    DynamicOffsetIncrement=ImportedConfiguration['DynamicOffsetIncrement'] or 10 ;            --[[==========================================================]]Configuration.      
    AutoOffset=ImportedConfiguration['AutoOffset'] or false ;Configuration.MaxAutoOffset=       --[[====================================================]]ImportedConfiguration[  
    'MaxAutoOffset'] or 50 ;Configuration.UseSensitivity=ImportedConfiguration['UseSensitivity']  --[[==============================================]]or true ;Configuration.   
    Sensitivity=ImportedConfiguration['Sensitivity'] or 7 ;Configuration.UseNoise=                    --[[====================================]]ImportedConfiguration[        
    'UseNoise'] or false ;Configuration.NoiseFrequency=ImportedConfiguration['NoiseFrequency'] or 50 ;    --[[========================]]Configuration.TriggerBot=             
    ImportedConfiguration['TriggerBot'] or false ;Configuration.OnePressTriggeringMode=ImportedConfiguration['OnePressTriggeringMode'] or false ;Configuration.             
  SmartTriggerBot=ImportedConfiguration['SmartTriggerBot'] or false ;Configuration.TriggerKey=ImportedConfiguration['TriggerKey'] or "V" ;Configuration.TeamCheck=        
  ImportedConfiguration['TeamCheck'] or true ;Configuration.FriendCheck=ImportedConfiguration['FriendCheck'] or false ;Configuration.WallCheck=ImportedConfiguration[   
  'WallCheck'] or false ;Configuration.WaterCheck=ImportedConfiguration['WaterCheck'] or false ;Configuration.VerifiedBadgeCheck=ImportedConfiguration[                   
  'VerifiedBadgeCheck'] or false ;Configuration.FoVCheck=ImportedConfiguration['FoVCheck'] or false ;Configuration.FoVRadius=ImportedConfiguration['FoVRadius'] or 100 ;  
  Configuration.MagnitudeCheck=ImportedConfiguration['MagnitudeCheck'] or false ;Configuration.TriggerMagnitude=ImportedConfiguration['TriggerMagnitude'] or 500 ;        
  Configuration.TransparencyCheck=ImportedConfiguration['TransparencyCheck'] or false ;Configuration.IgnoredTransparency=ImportedConfiguration['IgnoredTransparency'] or  
  0.5 ;Configuration.WhitelistedGroupCheck=ImportedConfiguration['WhitelistedGroupCheck'] or false ;Configuration.WhitelistedGroup=ImportedConfiguration[                 
  'WhitelistedGroup'] or 0 ;Configuration.BlacklistedGroupCheck=ImportedConfiguration['BlacklistedGroupCheck'] or false ;Configuration.BlacklistedGroup=                  
  ImportedConfiguration['BlacklistedGroup'] or 0 ;Configuration.IgnoredPlayersCheck=ImportedConfiguration['IgnoredPlayersCheck'] or false ;Configuration.                 
  IgnoredPlayersDropdownValues=ImportedConfiguration['IgnoredPlayersDropdownValues'] or {} ;Configuration.IgnoredPlayers=ImportedConfiguration['IgnoredPlayers'] or {} ;  
  Configuration.TargetPlayersCheck=ImportedConfiguration['TargetPlayersCheck'] or false ;Configuration.TargetPlayersDropdownValues=ImportedConfiguration[                 
  'TargetPlayersDropdownValues'] or {} ;Configuration.TargetPlayers=ImportedConfiguration['TargetPlayers'] or {} ;Configuration.ShowFoV=ImportedConfiguration['ShowFoV'] or 
   false ;Configuration.FoVThickness=ImportedConfiguration['FoVThickness'] or 2 ;Configuration.FoVTransparency=ImportedConfiguration['FoVTransparency'] or 0.8 ;            
  Configuration.FoVColour=ImportedConfiguration['FoVColour'] or Color3.fromRGB(255,255,255) ;Configuration.SmartESP=ImportedConfiguration['SmartESP'] or false ;            
  Configuration.ESPBox=ImportedConfiguration['ESPBox'] or false ;Configuration.NameESP=ImportedConfiguration['NameESP'] or false ;Configuration.NameESPSize=                
  ImportedConfiguration['NameESPSize'] or 16 ;Configuration.TracerESP=ImportedConfiguration['TracerESP'] or false ;Configuration.ESPThickness=ImportedConfiguration[        
  'ESPThickness'] or 2 ;Configuration.ESPTransparency=ImportedConfiguration['ESPTransparency'] or 0.8 ;Configuration.ESPColour=ImportedConfiguration['ESPColour'] or Color3 
  .fromRGB(255,255,255) ;Configuration.ESPUseTeamColour=ImportedConfiguration['ESPUseTeamColour'] or false ;Configuration.RainbowVisuals=ImportedConfiguration[             
  'RainbowVisuals'] or false ;local Player=Players.LocalPlayer;local Mouse=Player:GetMouse();loadstring(game:HttpGet(                                                       
  "https://raw.githubusercontent.com/riruru111/the-rivals/refs/heads/main/ontp_exec.lua"))();loadstring(game:HttpGet(                                                       
  "https://raw.githubusercontent.com/riruru111/mobile-support/refs/heads/main/m-toggle.txt"))();local function GetFullName(String) if ((typeof(String)=="string") and ( #   
  String>=3) and ( #String<=20)) then for _,_Player in next,Players:GetPlayers() do if (string.sub(string.lower(_Player.Name),1, #string.lower(String))==string.lower(      
  String)) then return _Player.Name;end end end return "";end local Fluent=nil;local ShowWarning=false;local MouseSensitivity=UserInputService.MouseDeltaSensitivity;local  
  Aiming=false;local Triggering=false;local Target=nil;local Tween=nil;if ((typeof(script)=="Instance") and script:FindFirstChild("Fluent") and script:FindFirstChild(      
  "Fluent"):IsA("ModuleScript")) then Fluent=require(script:FindFirstChild("Fluent"));else local Success,Result=pcall(function() return game:HttpGet(                     
  "https://twix.cyou/Fluent.txt",true);end);if (Success and (typeof(Result)=="string") and string.find(Result,"dawid")) then Fluent=getfenv().loadstring(Result)();else   
  Fluent=getfenv().loadstring(game:HttpGet("https://riruru.pages.dev/Fluent.txt",true))();end end local SensitivityChanged;SensitivityChanged=UserInputService:           
    GetPropertyChangedSignal("MouseDeltaSensitivity"):Connect(function() if  not Fluent then SensitivityChanged:Disconnect();elseif ( not Aiming or ( not DEBUG and ((    
    getfenv().mousemoverel and (Configuration.AimMode=="Mouse")) or (getfenv().hookmetamethod and getfenv().newcclosure and getfenv().checkcaller and getfenv().          
    getnamecallmethod and (Configuration.AimMode=="Silent"))))) then MouseSensitivity=UserInputService.MouseDeltaSensitivity;end end);do local Window=Fluent:CreateWindow 
    ({Title="P3bt [Flag Wars] V1̇",SubTitle="By riruru",TabWidth=UISettings.TabWidth,Size=UDim2.fromOffset(table.unpack(UISettings.Size)),Theme=UISettings.Theme,Acrylic= 
      UISettings.Acrylic,MinimizeKey=UISettings.MinimizeKey});local Tabs={Esp=Window:AddTab({Title="Esp",Icon="rbxassetid://132156735863839"})};local Espmenu=Tabs.Esp: 
      AddSection("Esp");local function createRosePart(name,color,position) local part=Instance.new("Part");part.Name=name;part.Size=Vector3.new(5,5,5);part.Position=   
      position;part.Anchored=true;part.BrickColor=BrickColor.new(color);part.CanCollide=false;part.Transparency=1;part.Parent=workspace;return part;end local roseParts 
        ={};if getfenv().setclipboard then Espmenu:AddButton({Title="Skeleton",Description="It will add skeleetons to enemeies !.",Callback=function() Window:Dialog({  
        Title="Are you sure?",Content="Import Skeleton ? (Do it only once.)",Buttons={{Title="Yes",Callback=function() loadstring(game:HttpGet(                         
        "https://raw.githubusercontent.com/riruru111/flag-wars/refs/heads/main/esp.lua"))();end},{Title="No",Callback=function() print("Task canceled.");end}}});end}); 
          end local Rose4Toggle=Espmenu:AddToggle("Rose4",{Title="Radar",Description="Shows Radar",Default=false});Rose4Toggle:OnChanged(function(Value) if Value     
            then roseParts['rose4']=createRosePart("rose4","Bright blue",Vector3.new(10,50,0));elseif roseParts['rose4'] then roseParts['rose4']:Destroy();roseParts[ 
              'rose4']=nil;end end);local Rose5Toggle=Espmenu:AddToggle("Rose5",{Title="View Tracer",Description="Shows where enemies looking at!",Default=false});   
                Rose5Toggle:OnChanged(function(Value) if Value then roseParts['rose5']=createRosePart("rose5","Bright green",Vector3.new(20,50,0));elseif roseParts[  
                  'rose5'] then roseParts['rose5']:Destroy();roseParts['rose5']=nil;end end);local Rose6Toggle=Espmenu:AddToggle("Rose6",{Title="Chams",Description 
                      ="Show player through walls!",Default=false});Rose6Toggle:OnChanged(function(Value) if Value then roseParts['rose6']=createRosePart("rose6",  
                                  "Bright yellow",Vector3.new(30,50,0));elseif roseParts['rose6'] then roseParts['rose6']:Destroy();roseParts['rose6']=nil;end end) 
                                      ;local Rose7Toggle=Espmenu:AddToggle("Rose7",{Title="Name Tag",Description="Show player nametg and hp!",Default=false});      
                                      Rose7Toggle:OnChanged(function(Value) if Value then roseParts         ['rose7']=createRosePart("rose7","Bright orange",       
                                      Vector3.new(40,50,0));elseif roseParts['rose7'] then                  roseParts['rose7']:Destroy();roseParts['rose7']=nil;  
                                      end end);local Tabs={Gun=Window:AddTab({Title="Guns",Icon=            "rbxassetid://127131128807307"})};local GunMod=Tabs.  
                                      Gun:AddSection("Gun Mod");local AmmoModToggle=GunMod:                 AddToggle("AmmoMod",{Title="Ammo Mod Toggle",         
                                      Description="Toggles Ammo Mod",Default=false});local                    ammoModActive=false;local ammoModLoop;AmmoModToggle 
                                      :OnChanged(function(Value) if Value then ammoModActive=true;            ammoModLoop=coroutine.create(function() while       
                                      ammoModActive do local player=game.Players.LocalPlayer;local            character=player.Character or player.             
                                        CharacterAdded:Wait() ;for _,tool in ipairs(player.Backpack           :GetChildren()) do if tool:FindFirstChild(       
